# This is a basic workflow to help you get started with Actions

name: Create News Fragment

# Controls when the action will run. 
on:
  # Triggers the workflow on pull request events but only for the main branch
  pull_request:
    branches: [ main ]
    types: [ closed ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    if: github.event.pull_request.merged == true

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11' 
      
      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          pip3 install git+https://github.com/jonathanj/cacofonix.git
          _TYPE="change"
          if ${{contains(github.event.pull_request.labels.*.name, 'enhancement')}} ; then _TYPE="feature"; fi
          if ${{contains(github.event.pull_request.labels.*.name, 'bug')}} ; then _TYPE="bugfix"; fi
          cacofonix --config cacofonix.yaml compose -t "${_TYPE}" -d '${{github.event.pull_request.title}}'

      - name: commit changes
        run: |
         git config --local user.email "$(git log --format='%ae' HEAD^!)"
         git config --local user.name "$(git log --format='%an' HEAD^!)"
          
          git remote add github "https://$GITHUB_ACTOR:$GITHUB_TOKEN@github.com/$GITHUB_REPOSITORY.git"
          git pull github ${GITHUB_REF} --ff-only
          
          if ! `git diff-files --quiet .changes` ; then
            echo "No news-fragment changes found, exiting."
            exit 0
          fi
          
          git add .changes
          git commit -m "Add news fragment"
          git push github HEAD:${GITHUB_REF}
